<!doctype html>
<html lang="en">
  <head>
    <script type="text/javascript" src="http://gc.kis.v2.scr.kaspersky-labs.com/FD126C42-EBFA-4E12-B309-BB3FDD723AC1/main.js" nonce="98EA9E4007549B4FA2D39A59696E11FC" charset="UTF-8"></script><style>

.footer {
   margin: auto;
  width: 50%;
  padding: 20px;
   left: 0;
   bottom: 0;
   width: 100%;
   background-color: gray;
   color: white;
   text-align: center;
}
</style>

    <body style="background-color: #F0F3F4"> 
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">


    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">

    <title>PROgrammer</title>
  </head>
  <body>
    
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
  <a class="navbar-brand" href="#"><h5>PROgrammer</h5></a>
 <div class="collapse navbar-collapse" id="navbarSupportedContent">
    <ul class="navbar-nav mr-auto">
      <li class="nav-item active">
        <a class="nav-link" href="java.htm">&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspBack to Java concepts<span class="sr-only">(current)</span></a>
      </li>
  <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
    <span class="navbar-toggler-icon"></span>
  </button>
 </ul>
    
  </div>
</nav><br><br>
<center><h3>Control statements.</h3></center>
<br>
    <h5>&nbsp&nbspControl Statements in Java is one of the fundamentals required for Java Programming. It allows the smooth flow of a program. <br> &nbsp&nbspFollowing pointers will be covered in this article:
        <br><br>&nbsp&nbsp<b>1. Simple if statement</b>:
        <br>&nbsp&nbspThe if statement determines whether a code should be executed based on the specified condition.
        <br><br>&nbsp&nbspSyntax:
        <br><br>&nbsp&nbspif (condition) { 
<br>&nbsp&nbspStatement 1; //executed if condition is true
}
<br>&nbsp&nbspStatement 2; //executed irrespective of the condition
        <br><br>&nbsp&nbsp<b>2. if-else statement</b>:
        <br>&nbsp&nbspIn this statement, if the condition specified is true, the if block is executed. Otherwise, the else block is executed.
<br><br>&nbsp&nbsp example:
        <br><br>&nbsp&nbsppublic class Main
<br>&nbsp&nbsp{
<br>&nbsp&nbsppublic static void main(String args[])
<br>&nbsp&nbsp{
<br>&nbsp&nbspint a = 15;
<br>&nbsp&nbspif (a > 20)
<br>&nbsp&nbspSystem.out.println("a is greater than 10");
<br>&nbsp&nbspelse
<br>&nbsp&nbspSystem.out.println("a is less than 10");
<br>&nbsp&nbspSystem.out.println("Hello World!");
<br>&nbsp&nbsp}
<br>&nbsp&nbsp}
<br>&nbsp&nbsp}
        <br><br>&nbsp&nbsp<b>3. Nested-if statement</b>:
        <br>&nbsp&nbspAn if present inside an if block is known as a nested if block. It is similar to an if..else statement, except they are defined inside another if..else &nbsp&nbspstatement.
        <br><br>&nbsp&nbspSyntax:
        <br><br>&nbsp&nbspif (condition1) {
<br>&nbsp&nbspStatement 1; //executed if first condition is true
<br>&nbsp&nbspif (condition2) {
<br>&nbsp&nbspStatement 2; //executed if second condition is true
<br>&nbsp&nbsp}
<br>&nbsp&nbspelse {
<br>&nbsp&nbspStatement 3; //executed if second condition is false
<br>&nbsp&nbsp}
<br>&nbsp&nbsp}
       <br><br>&nbsp&nbsp<b>4. switch statement</b>:
        <br>&nbsp&nbsp
A switch statement in java is used to execute a single statement from multiple conditions. The switch statement can be used with short, byte, int, &nbsp&nbsplong, enum types, etc.
       <br> <br>&nbsp&nbspSyntax:
        <br><br>&nbsp&nbspswitch(expression){    
<br>&nbsp&nbspcase value1:    
 <br>&nbsp&nbsp//code to be executed;    
 <br>&nbsp&nbspbreak;  //optional  
<br>&nbsp&nbspcase value2:    
 <br>&nbsp&nbsp//code to be executed;    
 <br>&nbsp&nbspbreak;  //optional  
<br>&nbsp&nbsp......    
    
<br>&nbsp&nbspdefault:     
 <br>&nbsp&nbspcode to be executed if all cases are not matched;    
<br>&nbsp&nbsp}    
           <br><br>&nbsp&nbsp<b>5.while loop</b>:
        <br>&nbsp&nbspKnown as the most common loop, the while loop evaluates a certain condition. If the condition is true, the code is executed. This process is &nbsp&nbspcontinued until the specified condition turns out to be false.
The condition to be specified in the while loop must be a Boolean expression. An error &nbsp&nbspwill be generated if the type used is int or a string.
        <br><br>&nbsp&nbspSyntax:
       <br><br>&nbsp&nbsp while (condition)
<br><br>&nbsp&nbsp{
<br><br>&nbsp&nbspstatementOne;
<br><br>&nbsp&nbsp}
           <br><br>&nbsp&nbsp<b>6. do-while loop</b>:
        <br>&nbsp&nbspThe do-while loop is similar to the while loop, the only difference being that the condition in the do-while loop is evaluated after the execution of the loop body. This guarantees that the loop is executed at least once.
        <br><br>&nbsp&nbspSyntax:
        <br><br>&nbsp&nbspdo{
<br><br>&nbsp&nbsp//code to be executed
<br><br>&nbsp&nbsp}while(condition);
           <br><br>&nbsp&nbsp<b>6. for loop</b>:
        <br>&nbsp&nbspThe for loop in java is used to iterate and evaluate a code multiple times. When the number of iterations is known by the user, it is recommended to use the for loop.
        <br><br>&nbsp&nbspSyntax:
        <br><br>&nbsp&nbspfor (initialization; condition; increment/decrement)
<br><br>&nbsp&nbsp{
<br><br>&nbsp&nbspstatement;
<br><br>&nbsp&nbsp}

</h5>
<br>
<h6>&nbsp&nbspFor more detailed information: 
      <br><br>  &nbsp&nbsp&nbsp<a href="https://www.geeksforgeeks.org/decision-making-javaif-else-switch-break-continue-jump/" class="btn btn-primary">Click here</a>
</h6>

    <br>
   
      <hr class="my-4" style="color: black">
  </div>
</div>

<div class="footer" style="background-color: black">
     <a href="/terms">Terms and Conditions</a>
    <font color="white"> <p>Project by the <b>PROgrammer team</b> .No rights researved Â© 2020</p></font>
</div>


   
    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
  </body>
</html>